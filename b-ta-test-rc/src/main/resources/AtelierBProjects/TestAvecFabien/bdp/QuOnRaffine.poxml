<Proof_Obligations>
<Define name="B definitions">
<Nary_Pred op="&amp;">
<Exp_Comparison op="=">
<Id value="NAT"/>
<Binary_Exp op="..">
<Integer_Literal value="0"/>
<Id value="MAXINT"/>
</Binary_Exp>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id value="INT"/>
<Binary_Exp op="..">
<Id value="MININT"/>
<Id value="MAXINT"/>
</Binary_Exp>
</Exp_Comparison>
</Nary_Pred>
</Define>
<Define name="ctx"/>
<Define name="seext"/>
<Define name="inv">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Binary_Pred op="or" initialTag="((((aa$1) = (0))) or (((cc$1) = (0))))">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Binary_Pred>
</Nary_Pred>
</Define>
<Define name="ass"/>
<Define name="lprp">
<Exp_Comparison op="=">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:4:1:1" typref="2701647786" value="ee"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:4:1:2" typref="2701647786" value="dd"/>
</Exp_Comparison>
</Define>
<Define name="inprp"/>
<Define name="inext"/>
<Define name="mchcst"/>
<Define name="aprp">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:1:1" typref="2701647786" value="dd"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="&gt;">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:2:1" typref="2701647786" value="dd"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:3:1" typref="3672872563" value="nm"/>
<Binary_Exp op="|-&gt;" typref="3672872563">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:3:2:1" typref="2701647786" value="dd"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:3:1:3:2:2" typref="2701647786" value="dd"/>
</Binary_Exp>
</Exp_Comparison>
</Nary_Pred>
</Define>
<Define name="abs">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((nn) : (NATURAL))">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:4:1:1:1" typref="2701647786" value="nn"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:4:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="&lt;=" initialTag="(nn &lt;= dd)">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:4:1:2:1" typref="2701647786" value="nn"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:4:1:2:2" typref="2701647786" value="dd"/>
</Exp_Comparison>
</Nary_Pred>
</Define>
<Proof_Obligation>
<Comment>Initialisation dans un raffinement</Comment>
<Tag>Initialisation</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Goal>
<Sub_Calculus>
<Nary_Sub op=";">
<Nary_Sub op="||">
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:6:1:1:1:1," typref="2701647786" value="aa"/>
</Variables>
<Values>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:6:1:1:2:1" typref="2701647786" value="0"/>
</Values>
</Simple_Assignement_Sub>
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:6:1:2:1:1," typref="2701647786" value="bb"/>
</Variables>
<Values>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:6:1:2:2:1" typref="2701647786" value="0"/>
</Values>
</Simple_Assignement_Sub>
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:6:1:3:1:1," typref="2701647786" value="cc"/>
</Variables>
<Values>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:6:1:3:2:1" typref="2701647786" value="0"/>
</Values>
</Simple_Assignement_Sub>
</Nary_Sub>
</Nary_Sub>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Not>
<Sub_Calculus>
<Nary_Sub op=";">
<Simple_Assignement_Sub>
<Variables>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:5:1:1:1" typref="2701647786" value="nn"/>
</Variables>
<Values>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:5:1:2:1" typref="2701647786" value="0"/>
</Values>
</Simple_Assignement_Sub>
</Nary_Sub>
<Not>
<Tag goalTag="Refinement is correct">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Binary_Pred op="or" initialTag="((((aa$1) = (0))) or (((cc$1) = (0))))">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Binary_Pred>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Not>
</Sub_Calculus>
</Not>
</Binary_Pred>
</Sub_Calculus>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement / Precondition</Comment>
<Tag>ML_In</Tag>
<Tag>PRECONDITION</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Precondition can be deduced">
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>ML_In</Tag>
<Tag>Refinement of ML_In</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Sub_Calculus>
<Select>
<When_Clauses>
<When>
<Condition>
<Exp_Comparison op="&gt;">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:1:1:1:1:1:1:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:1:1:1:1:1:1:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Condition>
<Then>
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:1:1:1:1:1:2:1:1:1," typref="2701647786" value="aa"/>
</Variables>
<Values>
<Binary_Exp op="-" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:1:1:1:1:1:2:1:2:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:1:1:1:1:1:2:1:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
</Then>
</When>
</When_Clauses>
</Select>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Not>
<Sub_Calculus>
<Select>
<When_Clauses>
<When>
<Condition>
<Exp_Comparison op="&gt;">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:1:1:1:1:1:1:1:1" typref="2701647786" value="nn"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:1:1:1:1:1:1:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Condition>
<Then>
<Simple_Assignement_Sub>
<Variables>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:1:1:1:1:1:2:1:1:1" typref="2701647786" value="nn"/>
</Variables>
<Values>
<Binary_Exp op="-" typref="2701647786">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:1:1:1:1:1:2:1:2:1:1" typref="2701647786" value="nn"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:1:1:1:1:1:2:1:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
</Then>
</When>
</When_Clauses>
</Select>
<Not>
<Tag goalTag="Refinement is correct">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Binary_Pred op="or" initialTag="((((aa$1) = (0))) or (((cc$1) = (0))))">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Binary_Pred>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Not>
</Sub_Calculus>
</Not>
</Binary_Pred>
</Sub_Calculus>
</Binary_Pred>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement / Precondition</Comment>
<Tag>ML_Out</Tag>
<Tag>PRECONDITION</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Precondition can be deduced">
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>ML_Out</Tag>
<Tag>Refinement of ML_Out</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Sub_Calculus>
<Select>
<When_Clauses>
<When>
<Condition>
<Nary_Pred op="&amp;">
<Exp_Comparison op="&lt;">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:1:1:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:1:1:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:1:1:1:2" typref="2701647786" value="dd"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:1:1:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:1:1:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Nary_Pred>
</Condition>
<Then>
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:2:1:1:1," typref="2701647786" value="aa"/>
</Variables>
<Values>
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:2:1:2:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:2:1:1:1:1:2:1:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
</Then>
</When>
</When_Clauses>
</Select>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Not>
<Sub_Calculus>
<Select>
<When_Clauses>
<When>
<Condition>
<Exp_Comparison op="&lt;">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:2:1:1:1:1:1:1:1" typref="2701647786" value="nn"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:2:1:1:1:1:1:1:2" typref="2701647786" value="dd"/>
</Exp_Comparison>
</Condition>
<Then>
<Simple_Assignement_Sub>
<Variables>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:2:1:1:1:1:2:1:1:1" typref="2701647786" value="nn"/>
</Variables>
<Values>
<Binary_Exp op="+" typref="2701647786">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:2:1:1:1:1:2:1:2:1:1" typref="2701647786" value="nn"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:6:2:1:1:1:1:2:1:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
</Then>
</When>
</When_Clauses>
</Select>
<Not>
<Tag goalTag="Refinement is correct">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Binary_Pred op="or" initialTag="((((aa$1) = (0))) or (((cc$1) = (0))))">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Binary_Pred>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Not>
</Sub_Calculus>
</Not>
</Binary_Pred>
</Sub_Calculus>
</Binary_Pred>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement / Precondition</Comment>
<Tag>IL_In</Tag>
<Tag>PRECONDITION</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Precondition can be deduced">
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>IL_In</Tag>
<Tag>Refinement of IL_In</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Sub_Calculus>
<Select>
<When_Clauses>
<When>
<Condition>
<Exp_Comparison op="&gt;">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:1:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:1:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Condition>
<Then>
<Nary_Sub op="||">
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:2:1:1:1:1," typref="2701647786" value="aa"/>
</Variables>
<Values>
<Binary_Exp op="-" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:2:1:1:2:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:2:1:1:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:2:1:2:1:1," typref="2701647786" value="bb"/>
</Variables>
<Values>
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:2:1:2:2:1:1," typref="2701647786" value="bb"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:3:1:1:1:1:2:1:2:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
</Nary_Sub>
</Then>
</When>
</When_Clauses>
</Select>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Not>
<Sub_Calculus>
<Skip/>
<Not>
<Tag goalTag="Refinement is correct">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Binary_Pred op="or" initialTag="((((aa$1) = (0))) or (((cc$1) = (0))))">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Binary_Pred>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Not>
</Sub_Calculus>
</Not>
</Binary_Pred>
</Sub_Calculus>
</Binary_Pred>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement / Precondition</Comment>
<Tag>IL_Out</Tag>
<Tag>PRECONDITION</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Precondition can be deduced">
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>IL_Out</Tag>
<Tag>Refinement of IL_Out</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Sub_Calculus>
<Select>
<When_Clauses>
<When>
<Condition>
<Nary_Pred op="&amp;">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:1:1:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:1:1:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="&gt;">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:1:1:2:1," typref="2701647786" value="bb"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:1:1:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Nary_Pred>
</Condition>
<Then>
<Nary_Sub op="||">
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:2:1:1:1:1," typref="2701647786" value="cc"/>
</Variables>
<Values>
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:2:1:1:2:1:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:2:1:1:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
<Simple_Assignement_Sub>
<Variables>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:2:1:2:1:1," typref="2701647786" value="bb"/>
</Variables>
<Values>
<Binary_Exp op="-" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:2:1:2:2:1:1," typref="2701647786" value="bb"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:7:4:1:1:1:1:2:1:2:2:1:2" typref="2701647786" value="1"/>
</Binary_Exp>
</Values>
</Simple_Assignement_Sub>
</Nary_Sub>
</Then>
</When>
</When_Clauses>
</Select>
<Binary_Pred op="=&gt;">
<Nary_Pred op="&amp;"/>
<Not>
<Sub_Calculus>
<Skip/>
<Not>
<Tag goalTag="Refinement is correct">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Binary_Pred op="or" initialTag="((((aa$1) = (0))) or (((cc$1) = (0))))">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:1," typref="2701647786" value="cc"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:2:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Binary_Pred>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Not>
</Sub_Calculus>
</Not>
</Binary_Pred>
</Sub_Calculus>
</Binary_Pred>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Tag>WellDefinednessProperties</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Hypothesis/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Tag>WellDefinednessInvariant</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Binary_Pred op="=&gt;">
<Exp_Comparison op=":" initialTag="((aa$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:1," typref="2701647786" value="aa"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:1:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Nary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Binary_Pred op="=&gt;">
<Exp_Comparison op=":" initialTag="((bb$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:1," typref="2701647786" value="bb"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:2:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Nary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Binary_Pred op="=&gt;">
<Exp_Comparison op=":" initialTag="((cc$1) : (NATURAL))">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:1," typref="2701647786" value="cc"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:3:2" typref="3603043417" value="NATURAL"/>
</Exp_Comparison>
<Nary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Binary_Pred op="=&gt;">
<Exp_Comparison op="=" initialTag="((((aa$1 + bb$1) + cc$1)) = (nn))">
<Binary_Exp op="+" typref="2701647786">
<Binary_Exp op="+" typref="2701647786">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:1," typref="2701647786" value="aa"/>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:2,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:1:2," typref="2701647786" value="bb"/>
</Binary_Exp>
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:3,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:1:2," typref="2701647786" value="cc"/>
</Binary_Exp>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:4:2" typref="2701647786" value="nn"/>
</Exp_Comparison>
<Nary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
<Binary_Pred op="=&gt;">
<Unary_Pred op="not">
<Exp_Comparison op="=">
<Id suffix="1" tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:3:1,/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:1," typref="2701647786" value="aa"/>
<Integer_Literal tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:5:1:5:1:2" typref="2701647786" value="0"/>
</Exp_Comparison>
</Unary_Pred>
<Binary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Binary_Pred>
</Binary_Pred>
</Binary_Pred>
</Nary_Pred>
</Binary_Pred>
</Nary_Pred>
</Binary_Pred>
</Nary_Pred>
</Binary_Pred>
</Nary_Pred>
</Binary_Pred>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Tag>WellDefinednessAssertions</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;"/>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Tag>WellDefinednessInitialisation</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
<Nary_Pred op="&amp;"/>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_Precondition_ML_In</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;"/>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_ML_In</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Binary_Pred op="=&gt;"/>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_Precondition_ML_Out</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;"/>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_ML_Out</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Binary_Pred op="=&gt;"/>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_Precondition_IL_In</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;"/>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_IL_In</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Binary_Pred op="=&gt;"/>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_Precondition_IL_Out</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;"/>
</Tag>
</Goal>
</Proof_Obligation>
<Proof_Obligation>
<Comment>Operations dans un raffinement</Comment>
<Tag>WellDefinedness_IL_Out</Tag>
<Tag>INVARIANT</Tag>
<Definition name="B definitions"/>
<Definition name="ctx"/>
<Definition name="mchcst"/>
<Definition name="aprp"/>
<Definition name="lprp"/>
<Definition name="inprp"/>
<Definition name="inext"/>
<Definition name="seext"/>
<Definition name="abs"/>
<Definition name="inv"/>
<Definition name="ass"/>
<Hypothesis>
<Nary_Pred op="&amp;"/>
</Hypothesis>
<Goal>
<Tag goalTag="Well definedness">
<Nary_Pred op="&amp;">
<Nary_Pred op="&amp;">
<Binary_Pred op="=&gt;"/>
</Nary_Pred>
</Nary_Pred>
</Tag>
</Goal>
</Proof_Obligation>
<TypeInfos>
<Type id="2701647786">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:8:1:1" value="INTEGER"/>
</Type>
<Type id="3603043417">
<Unary_Exp op="POW">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/QuOnRaffine.bxml:1:8:2:1:1" value="INTEGER"/>
</Unary_Exp>
</Type>
<Type id="2701647786">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:7:1:1" value="INTEGER"/>
</Type>
<Type id="3672872563">
<Binary_Exp op="*">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:7:2:1:1" value="INTEGER"/>
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:7:2:1:2" value="INTEGER"/>
</Binary_Exp>
</Type>
<Type id="3603043417">
<Unary_Exp op="POW">
<Id tag="/Users/sylvain/Temp/TestAvecFabien/bdp/UnSysteme.bxml:1:7:3:1:1" value="INTEGER"/>
</Unary_Exp>
</Type>
</TypeInfos>
</Proof_Obligations>
