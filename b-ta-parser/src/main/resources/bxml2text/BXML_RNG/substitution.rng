# DISTRIBUTED UNDER LICENCE GPL V3.0
# A RELAX NG compact syntax pattern
# for a substitution.
	
Substitution =
	( element Bloc_Sub { Attribute?, Substitution }
	  | element Skip { Attribute? }
	  | element Assert_Sub { 
			Attribute?, 
			element Guard { Attribute?, Predicate }, 
			element Body { Attribute?, Substitution } 
		}
	  | element If_Sub {
			attribute elseif { "yes" | "no" }, 
			Attribute?,
			element Condition { Attribute?, Predicate }, 
			element Then { Attribute?, Substitution }, 
			element Else { Attribute?, Substitution }?
		}
	  | element Becomes_Such_That {
			Attribute?, 
			Variables,
			element Pred { Attribute?, Predicate }
		}
	  | element Assignement_Sub {
			Attribute?, 
			element Variables { Attribute?, Expression+ },
			element Values { Attribute?, Expression+ }
		}
	  | element Select {
			Attribute?, 
			element When_Clauses {
				Attribute?, 
				element When {
					Attribute?, 
					element Condition { Attribute?, Predicate }, 
					element Then { Attribute?, Substitution }
				}+
			},
			element Else { Attribute?, Substitution }?
		}
	  | element Case_Sub {
			Attribute?, 
			element Value { Attribute?, Expression },
			element Choices {
				Attribute?, 
				element Choice {
					Attribute?, 
					element Value { Attribute?, Expression }+,
					element Then { Attribute?, Substitution }
				}+
			},
			element Else { 
				Attribute?, 
				element Choice { 
					Attribute?, 
					element Then { Attribute?, Substitution } 
				} 
			}?
		}
	  | element ANY_Sub {
			Attribute?, 
			Variables,
			element Pred { Attribute?, Predicate},
			element Then { Attribute?, Substitution }
		}
	  | element LET_Sub {
			Attribute?, 
			Variables,
			element Values {
				Attribute?, 
				element Valuation {
					Attribute?, 
					Expression,
					attribute ident { text }
				}+
			},
			element Then { Attribute?, Substitution }
		}
	  | element Becomes_In {
			Attribute?, 
			Variables,
			element Value { Attribute?, Expression }
		}
	  | element VAR_IN {
			Attribute?, 
			Variables,
			element Body { Attribute?, Substitution }
		}
	  | element Nary_Sub {
			Attribute?, 
			attribute op { "||" | ";" | "CHOICE" },
			Substitution+
		}
	  | element Operation_Call {
			Attribute?, 
			element Name { 
				Attribute?, 
				element Id { Identifier }
			},
			element Input_Parameters { Attribute?, Expression+ }?,
			element Output_Parameters { Attribute?, Expression+ }?
		}
	  | element While {
			Attribute?, 
			element Condition { Attribute?, Predicate }, 
			element Body { Attribute?, Substitution }, 
			element Invariant { Attribute?, Predicate }, 
			element Variant { Attribute?, Expression }
		}
	)
Variables =
	element Variables { 
			Attribute?, 
			element Id { Identifier }+
		}

